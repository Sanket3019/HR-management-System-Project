package com.app.pojos;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;


@Entity
@Table(name = "t_leave")
public class Leave 
{
	private Integer id;
	private LeaveType leave_type;
	
	@JsonFormat(pattern = "yyyy-MM-dd")
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	private Date start_date;
	
	@JsonFormat(pattern = "yyyy-MM-dd")
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	private Date end_date;
	private String reason;
	private int total_leave;
	private int remaining_leave;
	
	@JsonIgnore
	private User user;
	
	public Leave() 
	{
		super();
		// TODO Auto-generated constructor stub
	}

	public Leave(LeaveType leave_type, Date start_date, Date end_date, String reason,
			int total_leave, int remaining_leave) 
	{
		super();
		this.leave_type = leave_type;
		this.start_date = start_date;
		this.end_date = end_date;
		this.reason = reason;
		
		this.total_leave = total_leave;
		this.remaining_leave = remaining_leave;
	}

	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Id
	@Column(name = "id", length = 8, unique = true, nullable = false)
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Enumerated(EnumType.STRING)
	@Column(name = "leave_type")
	public LeaveType getLeave_type() {
		return leave_type;
	}

	public void setLeave_type(LeaveType leave_type) {
		this.leave_type = leave_type;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_date", nullable = false)
	public Date getStart_date() {
		return start_date;
	}

	public void setStart_date(Date start_date) {
		this.start_date = start_date;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "end_date", nullable = false)
	public Date getEnd_date() {
		return end_date;
	}

	public void setEnd_date(Date end_date) {
		this.end_date = end_date;
	}

	@Column(name = "reason")
	public String getReason() {
		return reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@Column(name = "total_leave")
	public int getTotal_leave() {
		return total_leave;
	}

	public void setTotal_leave(int total_leave) {
		this.total_leave = total_leave;
	}

	@Column(name = "remaining_leave")
	public int getRemaining_leave() {
		return remaining_leave;
	}

	public void setRemaining_leave(int remaining_leave) {
		this.remaining_leave = remaining_leave;
	}

	@OneToOne
	@JoinColumn(name = "user_id")
	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Override
	public String toString() {
		return "Leave [id=" + id + ", leave_type=" + leave_type + ", start_date=" + start_date + ", end_date="
				+ end_date + ", reason=" + reason + ", total_leave=" + total_leave
				+ ", remaining_leave=" + remaining_leave + "]";
	}

	
	
}
