package com.app.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.app.dao.ILeaveDao;
import com.app.pojos.Leave;


@CrossOrigin(allowedHeaders = "*")
@RestController
@RequestMapping("/leave")
public class LeaveController 
{
	@Autowired
	private ILeaveDao ileavedao;
	
	@GetMapping
	public List<Leave> getAllLeave()
	{
		List<Leave> l = ileavedao.getAllLeaves();
		System.out.println(l);
		return l;
	}
	
	@PostMapping("/apply")
	public Integer register(@RequestBody Leave leave,@RequestParam int u_id,HttpServletRequest request, Model map, HttpSession hs)
	{
		System.out.println(leave);
		return ileavedao.applyLeave(leave, u_id);
	}
	
	@GetMapping("/{u_id}") 
	public List<Leave> getAllLeavesOfUser(@PathVariable int u_id)
	{
		System.out.println("in get leave dtls " + u_id);
	
		List<Leave> leaves = ileavedao.getAllLeavesOfUser(u_id);
		
		return leaves;
	}
	
	@GetMapping("/active")
	public List<Leave> getAllActiveLeaves()
	{
		System.out.println("in get active leaves ");
		List<Leave> aleaves = ileavedao.getAllActiveLeaves();
		return aleaves;
	}
	
	
	@PutMapping("/{id}")
	public ResponseEntity<?> updateLeaveDetails(@PathVariable int id,@RequestBody Leave l)
	{
		System.out.println("in update " + " " + l);
		
		try 
		{ 
			if(l.getDuration()!=0)
			{
				return new ResponseEntity<String>(ileavedao.approveLeave(l),HttpStatus.OK);
			}
			else
			{
				return new ResponseEntity<String>(ileavedao.disapproveLeave(l),HttpStatus.OK);
			}
		}
		catch (RuntimeException e1)
		{
			e1.printStackTrace();
			return new ResponseEntity<String>(e1.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
}
